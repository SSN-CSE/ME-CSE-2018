* CP1203 WEB APPLICATION DEVELOPMENT
:properties:
:author: B Prabavathy, V S Felix Enigo
:date: 29 June 2018										
:end:

#+startup: showall

{{{credits}}}
| L | T | P | C |
| 3 | 0 | 0 | 3 |

** Course Objectives
- To understand the concepts of web site development
- To learn the basics of python
- To learn web application development using Python based framework
 
{{{unit}}}
|Unit I| Introduction |9|
Web Essentials: Web clients, web servers, communication protocol, HTTP
request and response message; HTML5: Tables – Lists – Image -- Control
and semantic elements, audio and video controls -- CSS3 – Inline,
embedded and external style sheets -– Rule cascading -– Inheritance -–
Backgrounds -– Border Images -– Colors -– Shadows –- Text –-
Transformations –- Transitions –- Animations.

{{{unit}}}
|Unit II| Client Side Programming |9|
Introduction to Javascript –- Variables –- Data types –- Statements –-
Operators –- Functions –-Objects -– Arrays -- Built-in objects -–
Event handling -- Introduction to DOM –- The document tree -– Node
object -– methods and properties -– Document object -– Methods and
properties -– Addition and deletion of elements -– Modifying element
style.

# Why study two server-side frameworks, NodeJS and Django? One will do.
{{{unit}}}
|Unit III| Introduction to Python |9|
Python interpreter and interactive mode -- Data types -- Expressions
-- Statements -- Control flow -- Functions -- Strings -- Arrays --
Lists -- Tuples -- Sets -- Dictionaries -- Files -- Modules --
Packages -- Exception handling -- Classes and objects

{{{unit}}}
|Unit IV|Web application using Django|9|
Building a blog: Creating a project -- Running the
development server -- Designing the model -- Setting up the database;
Dynamic website basics -- MVC -- Django architecture - Defining and
using the models: ORM -- URL configurations -- Modelling HTTP --
Views/Logics - Templates and form processing.

{{{unit}}}
|Unit V|Web application using Advanced Django |9|
Django applications: Photo gallery -- Content management system --
Liveblog; Advanced Django programming: Customizing the admin --
Syndication -- Generating downloadable files -- Enhancing Django’s ORM
-- Extending the template system; Advanced Django deployment.

** Suggested mini-projects
1. Create a college website using HTML5 and CSS3
2. Develop a MVC based web application for a Super Market Billing System. Use cookies as part of the web application
3. Develop Library Management System using MVC Django Architecture
4. Develop Inventory Management System using Django Framework
5. Develop a MVC based web application for Railway Reservation System using Django Framework


\hfill *Total: 45*

** Course Outcomes:
After the completion of this course, students will be able to:
- Create website using HTML and CSS (K3)
- Write programs using python (K3)
- Develop web applications using Python based framework (K3)

** References
1. Jeffrey C Jackson, ``Web Technologies A Computer Science
   Perspective'', Pearson Education, 2011. (unit I)
2. Deitel and Deitel and Nieto, ``Internet and World Wide Web - How to Program'', Prentice Hall, 5th Edition, 2011. (unit II)
3. Allen B Downey, ``Think python: How to think like a computer scientist'', Second Edition, Updated for Pythom3 Shroff/O'Reilly publishers, 2016. (unit III)
4. Jeff forcier, Paul bissex and Wesley chun, ``Python web development
   with Django'', Addison-Wesley Professional, 2008. (unit IV, V)
